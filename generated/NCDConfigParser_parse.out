State 0:
          input ::= * interfaces
          interfaces ::= * PROCESS NAME CURLY_OPEN statements CURLY_CLOSE
          interfaces ::= * PROCESS NAME CURLY_OPEN statements CURLY_CLOSE interfaces

                       PROCESS shift  10
                    interfaces shift  9
                         input accept

State 1:
          statements ::= statement_names ROUND_OPEN * statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statements ::= statement_names ROUND_OPEN * statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON statements
          statement_names ::= * NAME
          statement_names ::= * NAME DOT statement_names
      (7) statement_args_maybe ::= *
          statement_args_maybe ::= * statement_args
          statement_args ::= * STRING
          statement_args ::= * statement_names
          statement_args ::= * STRING COMMA statement_args
          statement_args ::= * statement_names COMMA statement_args

                          NAME shift  16
                        STRING shift  17
               statement_names shift  18
          statement_args_maybe shift  14
                statement_args shift  23
                     {default} reduce 7

State 2:
          statement_names ::= * NAME
          statement_names ::= * NAME DOT statement_names
          statement_args ::= * STRING
          statement_args ::= * statement_names
          statement_args ::= * STRING COMMA statement_args
          statement_args ::= STRING COMMA * statement_args
          statement_args ::= * statement_names COMMA statement_args

                          NAME shift  16
                        STRING shift  17
               statement_names shift  18
                statement_args shift  25

State 3:
          statement_names ::= * NAME
          statement_names ::= * NAME DOT statement_names
          statement_args ::= * STRING
          statement_args ::= * statement_names
          statement_args ::= * STRING COMMA statement_args
          statement_args ::= * statement_names COMMA statement_args
          statement_args ::= statement_names COMMA * statement_args

                          NAME shift  16
                        STRING shift  17
               statement_names shift  18
                statement_args shift  24

State 4:
          interfaces ::= PROCESS NAME CURLY_OPEN * statements CURLY_CLOSE
          interfaces ::= PROCESS NAME CURLY_OPEN * statements CURLY_CLOSE interfaces
          statements ::= * statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statements ::= * statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON statements
          statement_names ::= * NAME
          statement_names ::= * NAME DOT statement_names

                          NAME shift  16
                    statements shift  12
               statement_names shift  13

State 5:
          statements ::= * statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
      (3) statements ::= statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON *
          statements ::= * statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON statements
          statements ::= statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON * statements
          statement_names ::= * NAME
          statement_names ::= * NAME DOT statement_names

                          NAME shift  16
                    statements shift  20
               statement_names shift  13
                     {default} reduce 3

State 6:
          interfaces ::= * PROCESS NAME CURLY_OPEN statements CURLY_CLOSE
      (1) interfaces ::= PROCESS NAME CURLY_OPEN statements CURLY_CLOSE *
          interfaces ::= * PROCESS NAME CURLY_OPEN statements CURLY_CLOSE interfaces
          interfaces ::= PROCESS NAME CURLY_OPEN statements CURLY_CLOSE * interfaces

                       PROCESS shift  10
                    interfaces shift  19
                     {default} reduce 1

State 7:
          statements ::= statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE * name_maybe SEMICOLON
          statements ::= statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE * name_maybe SEMICOLON statements
     (13) name_maybe ::= *
          name_maybe ::= * NAME

                          NAME shift  22
                    name_maybe shift  15
                     {default} reduce 13

State 8:
          statement_names ::= * NAME
          statement_names ::= * NAME DOT statement_names
          statement_names ::= NAME DOT * statement_names

                          NAME shift  16
               statement_names shift  21

State 9:
      (0) input ::= interfaces *

                             $ reduce 0

State 10:
          interfaces ::= PROCESS * NAME CURLY_OPEN statements CURLY_CLOSE
          interfaces ::= PROCESS * NAME CURLY_OPEN statements CURLY_CLOSE interfaces

                          NAME shift  11

State 11:
          interfaces ::= PROCESS NAME * CURLY_OPEN statements CURLY_CLOSE
          interfaces ::= PROCESS NAME * CURLY_OPEN statements CURLY_CLOSE interfaces

                    CURLY_OPEN shift  4

State 12:
          interfaces ::= PROCESS NAME CURLY_OPEN statements * CURLY_CLOSE
          interfaces ::= PROCESS NAME CURLY_OPEN statements * CURLY_CLOSE interfaces

                   CURLY_CLOSE shift  6

State 13:
          statements ::= statement_names * ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON
          statements ::= statement_names * ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON statements

                    ROUND_OPEN shift  1

State 14:
          statements ::= statement_names ROUND_OPEN statement_args_maybe * ROUND_CLOSE name_maybe SEMICOLON
          statements ::= statement_names ROUND_OPEN statement_args_maybe * ROUND_CLOSE name_maybe SEMICOLON statements

                   ROUND_CLOSE shift  7

State 15:
          statements ::= statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe * SEMICOLON
          statements ::= statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe * SEMICOLON statements

                     SEMICOLON shift  5

State 16:
      (5) statement_names ::= NAME *
          statement_names ::= NAME * DOT statement_names

                           DOT shift  8
                     {default} reduce 5

State 17:
      (9) statement_args ::= STRING *
          statement_args ::= STRING * COMMA statement_args

                         COMMA shift  2
                     {default} reduce 9

State 18:
     (10) statement_args ::= statement_names *
          statement_args ::= statement_names * COMMA statement_args

                         COMMA shift  3
                     {default} reduce 10

State 19:
      (2) interfaces ::= PROCESS NAME CURLY_OPEN statements CURLY_CLOSE interfaces *

                     {default} reduce 2

State 20:
      (4) statements ::= statement_names ROUND_OPEN statement_args_maybe ROUND_CLOSE name_maybe SEMICOLON statements *

                     {default} reduce 4

State 21:
      (6) statement_names ::= NAME DOT statement_names *

                     {default} reduce 6

State 22:
     (14) name_maybe ::= NAME *

                     {default} reduce 14

State 23:
      (8) statement_args_maybe ::= statement_args *

                     {default} reduce 8

State 24:
     (12) statement_args ::= statement_names COMMA statement_args *

                     {default} reduce 12

State 25:
     (11) statement_args ::= STRING COMMA statement_args *

                     {default} reduce 11

----------------------------------------------------
Symbols:
    0: $:
    1: PROCESS
    2: NAME
    3: CURLY_OPEN
    4: CURLY_CLOSE
    5: ROUND_OPEN
    6: ROUND_CLOSE
    7: SEMICOLON
    8: DOT
    9: STRING
   10: COMMA
   11: error:
   12: interfaces: PROCESS
   13: statements: NAME
   14: statement_names: NAME
   15: statement_args_maybe: <lambda> NAME STRING
   16: statement_args: NAME STRING
   17: name_maybe: <lambda> NAME
   18: input: PROCESS
